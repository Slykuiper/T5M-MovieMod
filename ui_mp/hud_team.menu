// CONSOLE HUD - MP

#include "ui/menudef.h"
#include "ui/framestyle.inc"
#include "ui_mp/hud_gametypes.inc"

#define BAR_START_X			42
#define BAR_START_Y			-42
#define	BAR_HEIGHT			39
#define BAR_WIDTH			143
#define BAR_HEIGHT_TOP		20
#define BAR_HEIGHT_BOTTOM	16

#define BAR_PERCENT_TEAM		( max( team( score ), 0 ) / dvarInt( "ui_scorelimit" ) )
#define BAR_PRECENT_OTHERTEAM	( max( otherteam( score ), 0 ) / dvarInt( "ui_scorelimit" ) )

#define FSM_VISIBILITY ( isVisibilityBitSet( BIT_SELECTING_LOCATION ) && !isVisibilityBitSet( BIT_SPECTATING_CLIENT ) && !isVisibilityBitSet( BIT_SCOREBOARD_OPEN ) )

{
	menuDef
	{
		name			"scorebars_team_background"
		rect			BOTTOM_RECT_X BOTTOM_RECT_Y 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		exp				rect Y( BOTTOM_RECT_Y - (ONLINEGAME * ONLINEGAME_OFFSET) );
		fullScreen		0
		visible 		0
		visibilityBits	bits( BIT_HUD_VISIBLE !BIT_IN_KILLCAM !BIT_UI_ACTIVE HUD_VISIBILITY !BIT_IN_GUIDED_MISSILE !BIT_IN_GUIDED_MISSILE_STATIC SHOULD_DISPLAY_SCOREBAR )

		#define BG_OFFSET_X		(-15)
		#define BG_OFFSET_Y		(-5)
		#define BG_START_X		(BAR_START_X+BG_OFFSET_X)
		#define BG_START_Y		(BAR_START_Y+BG_OFFSET_Y)
		
		// score background
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			BG_START_X BG_START_Y 187 46 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				material( "hud_frame_faction_fade" );
			forecolor		1 1 1 0.5
			visible 		0
			decoration
		}
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			(BAR_START_X-69) (BG_START_Y-14) 240 59 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				material( "hud_frame_faction_lines" );
			forecolor		1 1 1 0.4
			visible 		0
			decoration
		}

		#define PROGRESS_OFFSET_X	0

		// Player team progress bar
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			BAR_START_X -42 70 BAR_HEIGHT_TOP HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				rect W( PROGRESS_OFFSET_X + (BAR_WIDTH-PROGRESS_OFFSET_X) * BAR_PERCENT_TEAM );
			exp				material( "hud_score_progress" );
			forecolor		0.42 0.68 0.46 0.8
			visible 		0
			decoration
		}

		// Other team progress bar
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			BAR_START_X -20 70 BAR_HEIGHT_BOTTOM HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				rect W( PROGRESS_OFFSET_X + (BAR_WIDTH-PROGRESS_OFFSET_X) * BAR_PRECENT_OTHERTEAM );
			exp				material( "hud_score_progress" );
			forecolor		0.73 0.29 0.19 0.8
			visible 		0
			decoration
		}
		
		// FACTION ICONS
		#define FACTION_ICON_WIDTH		0
		#define FACTION_ICON_HEIGHT		0
		#define FACTION_BG_WIDTH		0
		#define FACTION_BG_HEIGHT		0
		#define	FACTION_BG_X_START		(BAR_START_X-(FACTION_BG_WIDTH/2))
		#define	FACTION_BG_Y_START		(BAR_START_Y-(FACTION_BG_HEIGHT/2))
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			FACTION_BG_X_START FACTION_BG_Y_START FACTION_BG_WIDTH FACTION_BG_HEIGHT HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				material( "hud_faction_back_light" );
			forecolor		1 1 1 0.25
			visible 		0
			decoration
		}
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			FACTION_BG_X_START FACTION_BG_Y_START FACTION_BG_WIDTH FACTION_BG_HEIGHT HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				material( "hud_faction_backing" );
			forecolor		1 1 1 0.2
			visible 		0
			decoration
		}

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			(FACTION_BG_X_START+9) (FACTION_BG_Y_START+20) FACTION_ICON_WIDTH FACTION_ICON_HEIGHT HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			origin			5 -5
			exp				material( dvarString( "g_TeamIcon_Allies" ) );
			visible			0
			forecolor		1 1 1 1
			decoration
		}
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			(FACTION_BG_X_START+9) (FACTION_BG_Y_START+20) FACTION_ICON_WIDTH FACTION_ICON_HEIGHT HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			origin			5 -5
			exp				material( dvarString( "g_TeamIcon_Axis" ) );
			visible			0
			forecolor		1 1 1 1
			decoration
		}

	}

	#define SCORE_OFFSET_X	(PROGRESS_OFFSET_X-12)
	#define SCORE_START_X	(BAR_START_X+SCORE_OFFSET_X)
	#define SCORE_COLOR		1 1 1
	menuDef
	{
		name			"scorebars_team_scores"
		rect			BOTTOM_RECT_X BOTTOM_RECT_Y 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		exp				rect Y( BOTTOM_RECT_Y - (ONLINEGAME * ONLINEGAME_OFFSET) );
		fullScreen		0
		visible 		0
		visibilityBits	bits( BIT_HUD_VISIBLE !BIT_IN_KILLCAM !BIT_UI_ACTIVE HUD_VISIBILITY !BIT_IN_GUIDED_MISSILE !BIT_IN_GUIDED_MISSILE_STATIC SHOULD_DISPLAY_SCOREBAR )

		// draws TEAM score
		itemDef 
		{
			type			ITEM_TYPE_TEXT
			rect			(SCORE_START_X-2) -23 24 24 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( SCORE_START_X + ( (BAR_WIDTH-PROGRESS_OFFSET_X) * BAR_PERCENT_TEAM ) );
			exp				text( team( score ) );
			textfont		UI_FONT_EXTRABIG
			textscale		TEXTSIZE_LARGE
			textalign		ITEM_ALIGN_CENTER
			textstyle		ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor		SCORE_COLOR 1
			visible 		0
			decoration 
		}
		// Top Arrow
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			SCORE_START_X -53 24 24 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( SCORE_START_X + ( (BAR_WIDTH-PROGRESS_OFFSET_X) * BAR_PERCENT_TEAM ) );
			exp				material( "hud_frame_arrow" );
			forecolor		1 1 1 0.8
			visible 		0
			decoration
		}
		#define OT_SCORE_START_X	(SCORE_START_X+2)
		// OTHER TEAM score
		itemDef 
		{
			type			ITEM_TYPE_TEXT
			rect			(OT_SCORE_START_X-2) -7 20 20 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( OT_SCORE_START_X + ( (BAR_WIDTH-PROGRESS_OFFSET_X) * BAR_PRECENT_OTHERTEAM ) );
			exp				text( otherteam( score ) );
			textfont		UI_FONT_EXTRABIG
			textscale		TEXTSIZE_DEFAULT
			textalign		ITEM_ALIGN_CENTER
			textstyle		ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor		SCORE_COLOR 1
			visible 		0
			decoration 
		}
		// Bottom Arrow
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			OT_SCORE_START_X -16 20 (-20) HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( OT_SCORE_START_X + ( (BAR_WIDTH-PROGRESS_OFFSET_X) * BAR_PRECENT_OTHERTEAM ) );
			exp				material( "hud_frame_arrow" );
			forecolor		1 1 1 0.8
			visible 		0
			decoration
		}
	}

	#define STATUS_TIME			5
	#define	STATUS_TIME_MOD		30
	#define STATUS_FONT			UI_FONT_EXTRABIG
	#define STATUS_TEXT_SCALE	TEXTSIZE_DEFAULT
	#define STATUS_START_X		(BAR_START_X+(FACTION_BG_WIDTH/2)-4)
	#define STATUS_START_Y		(BAR_START_Y-2)
	// Score Bar
	menuDef
	{
		name			"scorebar_game_status"
		rect			BOTTOM_RECT_X BOTTOM_RECT_Y 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		exp				rect Y( BOTTOM_RECT_Y - (ONLINEGAME * ONLINEGAME_OFFSET) );
		fullScreen		0
		visible 		0
		visibilityBits	bits( BIT_HUD_VISIBLE !BIT_UI_ACTIVE !BIT_BOMB_TIMER !BIT_BOMB_TIMER_A !BIT_BOMB_TIMER_B !BIT_DEMO_CAMERA_MODE_MOVIECAM !BIT_DEMO_ALL_GAME_HUD_HIDDEN !BIT_IN_KILLCAM HUD_VISIBILITY !BIT_IN_GUIDED_MISSILE !BIT_IN_GUIDED_MISSILE_STATIC !BIT_SCOREBOARD_OPEN )

		#define	IS_WINNING ( team( score ) > otherteam( score ) && ((timeLeft() / 1000) % STATUS_TIME_MOD > STATUS_TIME) )
		// winning highlight
		//itemDef
		//{
		//	style			WINDOW_STYLE_SHADER
		//	type			ITEM_TYPE_IMAGE
		//	rect			(STATUS_START_X-5) (BAR_START_Y-15) 16 16 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
		//	exp				material( "hud_score_back" );
		//	exp				rect W( getTextWidth( locString( "@MENU_WINNING_CAPS" ), STATUS_FONT, STATUS_TEXT_SCALE )+10 );
		//	forecolor		0.3 1 0.3 0.2
		//	visible 		0
		//	decoration
		//}
		itemDef 
		{
			type			ITEM_TYPE_TEXT
			rect			STATUS_START_X STATUS_START_Y 1 1 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			text			"@MENU_WINNING_CAPS"
			textfont		STATUS_FONT
			textscale		STATUS_TEXT_SCALE
			textalign		ITEM_ALIGN_LEFT
			textstyle		ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor		NEW_FRAME_GREEN_RGB 1
			visible 		0
			decoration 
		}
		#define IS_LOSING ( team( score ) < otherteam( score ) && ((timeLeft() / 1000) % STATUS_TIME_MOD > STATUS_TIME) )
		// losing highlight
		//itemDef
		//{
		//	style			WINDOW_STYLE_SHADER
		//	type			ITEM_TYPE_IMAGE
		//	rect			(STATUS_START_X-5) (BAR_START_Y-15) 16 16 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
		//	exp				material( "hud_score_back" );
		//	exp				rect W( getTextWidth( locString( "@MENU_LOSING_CAPS" ), STATUS_FONT, STATUS_TEXT_SCALE )+10 );
		//	forecolor		1 0.3 0.3 0.2
		//	visible 		0
		//	decoration
		//}
		itemDef 
		{
			type			ITEM_TYPE_TEXT
			rect			STATUS_START_X STATUS_START_Y 1 1 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			text			"@MENU_LOSING_CAPS"
			textfont		STATUS_FONT
			textscale		STATUS_TEXT_SCALE
			textalign		ITEM_ALIGN_LEFT
			textstyle		ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor		NEW_FRAME_RED_RGB 1
			visible 		0
			decoration 
		}
		#define IS_TIED ( team( score ) == otherteam( score ) && ((timeLeft() / 1000) % STATUS_TIME_MOD > STATUS_TIME) )
		// tied highlight
		//itemDef
		//{
		//	style			WINDOW_STYLE_SHADER
		//	type			ITEM_TYPE_IMAGE
		//	rect			(STATUS_START_X-3) (BAR_START_Y-15) 16 16 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
		//	exp				material( "hud_score_back" );
		//	exp				rect W( getTextWidth( locString( "@MENU_TIED_CAPS" ), STATUS_FONT, STATUS_TEXT_SCALE )+8 );
		//	forecolor		1 1 0.3 0.2
		//	visible 		0
		//	decoration
		//}
		itemDef 
		{
			type			ITEM_TYPE_TEXT
			rect			STATUS_START_X STATUS_START_Y 1 1 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			text			"@MENU_TIED_CAPS"
			textfont		STATUS_FONT
			textscale		STATUS_TEXT_SCALE
			textalign		ITEM_ALIGN_LEFT
			textstyle		ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor		NEW_FRAME_YELLOW_RGB 1
			visible 		0
			decoration 
		}
		#define SHOW_GAMETYPE ( ((timeLeft() / 1000) % STATUS_TIME_MOD <= STATUS_TIME ) )
		itemDef 
		{
			type			ITEM_TYPE_TEXT
			rect			STATUS_START_X STATUS_START_Y 1 1 HORIZONTAL_ALIGN_USER_LEFT VERTICAL_ALIGN_USER_BOTTOM
			exp				text( toUpper( gameTypeName() ) );
			textfont		STATUS_FONT
			textscale		STATUS_TEXT_SCALE
			textalign		ITEM_ALIGN_LEFT
			textstyle		ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor		SCORE_COLOR 1
			visible 		0
			decoration 
		}
	}
}

	#define MINIMAP_ORIGIN 0 0
	
	// These are no longer used, they have been replaced by visibility bits.
	//#define ALLIES_HAVE_RADAR ( isVisibilityBitSet( BIT_RADAR_ALLIES ) && team( name ) == "TEAM_ALLIES" )
	//#define AXIS_HAVE_RADAR ( isVisibilityBitSet( BIT_RADAR_AXIS ) && team( name ) == "TEAM_AXIS" )
	//#define CLIENT_HAS_RADAR ( isVisibilityBitSet( BIT_RADAR_CLIENT ) && team( name ) == "TEAM_FREE" )
	
	#define RECT_COMPASS			0
	#define FRAME_OFFSET			0
	#define EXTRACAM_ON				0
	#define EXTRACAM_SCALE			0
	#define EXTRACAM_FRAME_OFFSET	0
	#define REC_TEXT_VISIBILE		( !isDemoDollyCamera() )

		}

		// frame
		itemDef
		{
			style		WINDOW_STYLE_SHADER
			type		ITEM_TYPE_IMAGE
			rect		0
			origin		0
			forecolor	0 0 0 0
			exp			material( "compass_map_border" );
			visible		0
		#define COMPASS_ALPHA	0.001
		}
		itemDef
 	   	{
			name			"mini_map"
			type			ITEM_TYPE_OWNERDRAW
			rect			0
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		0 0 0 COMPASS_ALPHA
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_COMPASS_MAP
			visible			0
			decoration
 	   	}

 	   	// Friendly Compass scrambler indicator 
		itemDef
 	   	{
			name			"compass_map_scrambler_friendlies"
			type			ITEM_TYPE_OWNERDRAW
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 COMPASS_ALPHA
			ownerdraw		CG_PLAYER_COMPASS_SCRAMBLER_FRIENDLY
			visible			0
 	   	}

		// Grid
		itemDef
 	   	{
			name			"compass_map_grid"
			type			ITEM_TYPE_OWNERDRAW
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 COMPASS_ALPHA
			background		"0"
			ownerdraw		CG_PLAYER_COMPASS_GRID
			visible			0
			decoration
 	   	}
		itemDef
		{
			name			"compass_grid_points"
			type			ITEM_TYPE_OWNERDRAW_TEXT
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 (COMPASS_ALPHA*0.7)
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textscale		0.26
			ownerdraw		CG_PLAYER_COMPASS_GRID_POINTS
			visible			0
		}
		// frame
		itemDef
		{
			name			"compassframe"
			style			WINDOW_STYLE_SHADER
			type			ITEM_TYPE_IMAGE
			rect			0
			origin			MINIMAP_ORIGIN
			forecolor		0 0 0 COMPASS_ALPHA
			exp				material( "compass_map_border" );
			visible			0
			decoration
		}
	}
}
